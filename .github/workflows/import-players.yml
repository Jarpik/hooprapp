# .github/workflows/import-players.yml
name: Import NBA Players Database

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      force_import:
        description: 'Force import even if database has data'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'
  
  # Optional: Weekly schedule (Sundays at 2 AM UTC)
  schedule:
    - cron: '0 2 * * 0'

jobs:
  import-players:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏀 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📥 Install Dependencies
        run: |
          npm install @supabase/supabase-js

      - name: 🔍 Verify Environment Variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "❌ NEXT_PUBLIC_SUPABASE_URL is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ]; then
            echo "❌ SUPABASE_SERVICE_ROLE_KEY is not set"
            exit 1
          fi
          echo "✅ All environment variables are set"

      - name: 🗄️ Check Database Status
        id: db_check
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          cat > check_db.js << 'EOF'
          const { createClient } = require('@supabase/supabase-js');
          
          async function checkDatabase() {
            try {
              const supabase = createClient(
                process.env.NEXT_PUBLIC_SUPABASE_URL,
                process.env.SUPABASE_SERVICE_ROLE_KEY
              );
              
              const { count, error } = await supabase
                .from('players')
                .select('*', { count: 'exact', head: true });
              
              if (error) {
                console.log('database_exists=false');
                return;
              }
              
              console.log(`database_exists=true`);
              console.log(`player_count=${count || 0}`);
              
              // Set GitHub Actions outputs
              const fs = require('fs');
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `database_exists=true\n`);
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `player_count=${count || 0}\n`);
              
            } catch (error) {
              console.log('database_exists=false');
              const fs = require('fs');
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `database_exists=false\n`);
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `player_count=0\n`);
            }
          }
          
          checkDatabase();
          EOF
          
          node check_db.js

      - name: 📊 Database Status Report
        run: |
          echo "🗄️ Database Status:"
          echo "  - Database exists: ${{ steps.db_check.outputs.database_exists }}"
          echo "  - Current player count: ${{ steps.db_check.outputs.player_count }}"
          echo "  - Force import: ${{ github.event.inputs.force_import }}"

      - name: 🚀 Import NBA Players Database
        if: steps.db_check.outputs.database_exists == 'false' || steps.db_check.outputs.player_count < 250 || github.event.inputs.force_import == 'true'
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "🏀 Starting StatleNBA database import..."
          echo "📊 Importing 300+ NBA players across all 6 divisions"
          node scripts/import-all-divisions.js

      - name: ✅ Verify Import Success
        if: steps.db_check.outputs.database_exists == 'false' || steps.db_check.outputs.player_count < 250 || github.event.inputs.force_import == 'true'
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          cat > verify_import.js << 'EOF'
          const { createClient } = require('@supabase/supabase-js');
          
          async function verifyImport() {
            try {
              const supabase = createClient(
                process.env.NEXT_PUBLIC_SUPABASE_URL,
                process.env.SUPABASE_SERVICE_ROLE_KEY
              );
              
              const { count, error } = await supabase
                .from('players')
                .select('*', { count: 'exact', head: true });
              
              if (error) {
                console.log('❌ Failed to verify import:', error.message);
                process.exit(1);
              }
              
              console.log(`✅ Import verification successful!`);
              console.log(`📊 Total players in database: ${count}`);
              
              if (count < 250) {
                console.log('⚠️ Warning: Player count seems low. Expected 300+ players.');
                process.exit(1);
              } else {
                console.log('🎉 StatleNBA database is ready for production!');
              }
              
            } catch (error) {
              console.log('❌ Verification failed:', error.message);
              process.exit(1);
            }
          }
          
          verifyImport();
          EOF
          
          node verify_import.js

      - name: 🎯 Skip Import (Database Already Populated)
        if: steps.db_check.outputs.database_exists == 'true' && steps.db_check.outputs.player_count >= 250 && github.event.inputs.force_import != 'true'
        run: |
          echo "✅ Database already contains ${{ steps.db_check.outputs.player_count }} players"
          echo "🎯 Skipping import - database is already populated"
          echo "💡 Use 'Force import' option if you want to re-import data"

      - name: 📝 Import Summary
        if: always()
        run: |
          echo "🏀 StatleNBA Database Import Summary:"
          echo "=================================="
          echo "📅 Date: $(date)"
          echo "🗄️ Database exists: ${{ steps.db_check.outputs.database_exists }}"
          echo "👥 Final player count: ${{ steps.db_check.outputs.player_count }}"
          echo "🔄 Action taken: ${{ (steps.db_check.outputs.database_exists == 'false' || steps.db_check.outputs.player_count < 250 || github.event.inputs.force_import == 'true') && 'Import executed' || 'Import skipped' }}"
          echo "✅ Status: Complete"
